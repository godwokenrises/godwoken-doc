"use strict";(self.webpackChunkckb_sdk=self.webpackChunkckb_sdk||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Latest","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar2":[{"type":"link","label":"Get Started with Godwoken","href":"/","docId":"getStart"},{"type":"link","label":"Developer Quick Start","href":"/quickStart","docId":"quickStart"},{"type":"link","label":"Godwoken Overview","href":"/overview","docId":"overview"},{"type":"link","label":"Godwoken Public Networks","href":"/connectionInfo","docId":"connectionInfo"},{"type":"category","label":"Basic Concepts","items":[{"type":"link","label":"Frameworks","href":"/frameworks","docId":"frameworks"},{"type":"link","label":"Infrastructure","href":"/infrastructure","docId":"infrastructure"},{"type":"link","label":"Standards","href":"/standards","docId":"standards"},{"type":"link","label":"Structure","href":"/structure","docId":"structure"},{"type":"link","label":"Tooling","href":"/tooling","docId":"tooling"},{"type":"link","label":"Wallets","href":"/wallets","docId":"wallets"},{"type":"link","label":"Tokens","href":"/tokens","docId":"tokens"},{"type":"link","label":"Godwoken Transaction","href":"/gwtxLife","docId":"gwtxLife"},{"type":"link","label":"Scripts","href":"/gwScripts","docId":"gwScripts"},{"type":"link","label":"pCKB","href":"/pCKB","docId":"pCKB"},{"type":"link","label":"Deposit and Withdrawal","href":"/depAndWthd","docId":"depAndWthd"},{"type":"link","label":"Godwoken-Kicker","href":"/godwokenkicker","docId":"godwokenkicker"},{"type":"link","label":"Account-Faucet","href":"/account-faucet","docId":"account-faucet"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Dapp Deployment","items":[{"type":"link","label":"Integration Guide for Ethereum Developers","href":"/integration","docId":"integration"},{"type":"link","label":"Deploy a Local Network with Godwoken-Kicker","href":"/deployLocalNetwork","docId":"deployLocalNetwork"},{"type":"category","label":"Layer 2 EVM Training","items":[{"type":"link","label":"Nervos\' Layer 2 EVM Training","href":"/evm_training/evmIntro","docId":"evm_training/evmIntro"},{"type":"link","label":"Setup and Requirements","href":"/evm_training/evmPrep","docId":"evm_training/evmPrep"},{"type":"link","label":"1. Create account on the EVM Layer 2 Testnet","href":"/evm_training/evmTask1","docId":"evm_training/evmTask1"},{"type":"link","label":"2. Deploy a Simple Ethereum Smart Contract on Polyjuice","href":"/evm_training/evmTask2","docId":"evm_training/evmTask2"},{"type":"link","label":"3. Issue a Smart Contract Call to the Deployed Smart Contract","href":"/evm_training/evmTask3","docId":"evm_training/evmTask3"},{"type":"link","label":"4. Use Force Bridge to Deposit Tokens from Ethereum","href":"/evm_training/evmTask4","docId":"evm_training/evmTask4"},{"type":"link","label":"5. Port an Existing Ethereum dApp to Polyjuice","href":"/evm_training/evmTask5","docId":"evm_training/evmTask5"},{"type":"link","label":"6. Withdraw From Layer 2 Back to Layer 1","href":"/evm_training/evmTask6","docId":"evm_training/evmTask6"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Asset Management","items":[{"type":"link","label":"Claim assets on testnet v1","href":"/claimFaucet","docId":"claimFaucet"},{"type":"link","label":"Deposit & Fast Withdrawal to Godwoken v1","href":"/fastWithdrawal","docId":"fastWithdrawal"},{"type":"link","label":"Transfer pCKB on Godwoken v1","href":"/sendPCKB","docId":"sendPCKB"},{"type":"link","label":"Extract a Privkey from MetaMask Wallet","href":"/extractPrivkey","docId":"extractPrivkey"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Release Notes","items":[{"type":"link","label":"Differences Between v0 and v1","href":"/gwchangelog/v0difv1","docId":"gwchangelog/v0difv1"},{"type":"link","label":"Godwoken V1.6 Release Note","href":"/gwchangelog/releaseNote1.6","docId":"gwchangelog/releaseNote1.6"},{"type":"link","label":"Godwoken Web3 V1.7 Release Note","href":"/web3changelog/web3Change1.7","docId":"web3changelog/web3Change1.7"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Ecosystem Tools","items":[{"type":"link","label":"Covalent","href":"/covalent","docId":"covalent"},{"type":"link","label":"Oracles","href":"/oracles","docId":"oracles"},{"type":"link","label":"Other Tools","href":"/otherTools","docId":"otherTools"}],"collapsed":true,"collapsible":true},{"type":"link","label":"FAQ","href":"/faq","docId":"faq"},{"type":"link","label":"Reference and Useful Links","href":"/reference","docId":"reference"}]},"docs":{"account-faucet":{"id":"account-faucet","title":"Account-Faucet","description":"Account-Faucet is a CLI tool for claiming faucets for Godwoken layer-2 accounts. Previously, to claim faucets, you must first visit the Faucet page, enter your CKB account address, then go to the Godwoken Bridge page and deposit those CKBs into your Godwoken layer-2 account.","sidebar":"sidebar2"},"bridgeIntro":{"id":"bridgeIntro","title":"Introduction to Godwoken Bridge","description":"Godwoken Bridge functions as a token bridge between CKB and Godwoken and allows the quick deposit and withdrawal of assets. It is powered by Light Godwoken, an SDK dedicated to developing decentralized applications on Godwoken."},"claimFaucet":{"id":"claimFaucet","title":"Claim assets on testnet v1","description":"Overview","sidebar":"sidebar2"},"connectionInfo":{"id":"connectionInfo","title":"Godwoken Public Networks","description":"Godwoken Mainnet v1","sidebar":"sidebar2"},"covalent":{"id":"covalent","title":"Covalent","description":"Covalent provides a unified API to bring full transparency and visibility to assets across all blockchain networks including Godwoken.","sidebar":"sidebar2"},"depAndWthd":{"id":"depAndWthd","title":"Deposit and Withdrawal","description":"Deposits and withdrawals comprise a special messaging mechanism between layer 1 (CKB) and layer 2 (Godwoken) that enables the exchange of assets through the transfer function. Users can deposit assets from layer 1 to layer 2, or withdraw assets from layer 2 to layer 1.","sidebar":"sidebar2"},"deployContractHardhat":{"id":"deployContractHardhat","title":"Deploy a Simple Contract with Hardhat","description":"In this guide you will take a very basic smart contract written in Ethereum\'s Solidity, compile it to EVM bytecode, and deploy it to Godwoken on Layer 2."},"deployEthDapp":{"id":"deployEthDapp","title":"Deploy Ethereum DApps to Godwoken","description":"Workflow"},"deployLocalNetwork":{"id":"deployLocalNetwork","title":"Deploy a Local Network with Godwoken-Kicker","description":"Godwoken-Kicker provides a quick mode and a manual-build mode for deployment.","sidebar":"sidebar2"},"evm_training/evmIntro":{"id":"evm_training/evmIntro","title":"Nervos\' Layer 2 EVM Training","description":"Welcome to the Nervos\' Layer 2 EVM (Ethereum Virtual Machine) Training! Here you will get an introduction to the Nervos ecosystem, learn about the various important concepts, and gain hands-on experience with the platform in preparation for deploying real-world applications.","sidebar":"sidebar2"},"evm_training/evmPrep":{"id":"evm_training/evmPrep","title":"Setup and Requirements","description":"Supported Architectures","sidebar":"sidebar2"},"evm_training/evmTask1":{"id":"evm_training/evmTask1","title":"1. Create account on the EVM Layer 2 Testnet","description":"Nervos supports the use of Ethereum-compatible smart contracts, which allow developers to create dApps using the popular Solidity smart contract language. This is done by running the EVM (Ethereum Virtual Machine) in a Layer 2 based execution environment using the Godwoken and Polyjuice frameworks.","sidebar":"sidebar2"},"evm_training/evmTask2":{"id":"evm_training/evmTask2","title":"2. Deploy a Simple Ethereum Smart Contract on Polyjuice","description":"Compiling and deploying a smart contract on Nervos\' EVM compatible Layer 2 is a process that has a lot of similarities to the process on Ethereum. There are only a few minor changes that need to be made.","sidebar":"sidebar2"},"evm_training/evmTask3":{"id":"evm_training/evmTask3","title":"3. Issue a Smart Contract Call to the Deployed Smart Contract","description":"In this task, we will learn how to make function calls to the smart contract deployed in the previous task. We will provide some simple example code that uses the popular Web3.js library to do so. This code will allow you to interact with your smart contract, which is running on Nervos\' Layer 2 in a nearly identical way to if it was running on Ethereum.","sidebar":"sidebar2"},"evm_training/evmTask4":{"id":"evm_training/evmTask4","title":"4. Use Force Bridge to Deposit Tokens from Ethereum","description":"This article is out of date as the Rinkeby testnet has been deprecated.","sidebar":"sidebar2"},"evm_training/evmTask5":{"id":"evm_training/evmTask5","title":"5. Port an Existing Ethereum dApp to Polyjuice","description":"In this tutorial, you will learn how to port an existing browser Ethereum application to run on Nervos\' EVM compatible Layer 2.","sidebar":"sidebar2"},"evm_training/evmTask6":{"id":"evm_training/evmTask6","title":"6. Withdraw From Layer 2 Back to Layer 1","description":"Withdrawing an asset from Layer 2 back to Layer 1 is another step in the roundtrip process of interoperability. Godwoken is a Layer 2 that is a natural extension of Layer 1, so it has deep integration allowing it to function seamlessly using a built-in withdrawal mechanism.","sidebar":"sidebar2"},"extractPrivkey":{"id":"extractPrivkey","title":"Extract a Privkey from MetaMask Wallet","description":"This tutorial will show you how to extract a private key from the MetaMask wallet. This will allow you to provide it with tools and services which require it to create transactions on your behalf.","sidebar":"sidebar2"},"faq":{"id":"faq","title":"FAQ","description":"Why is custodian cell needed in Godwoken?","sidebar":"sidebar2"},"fastWithdrawal":{"id":"fastWithdrawal","title":"Deposit & Fast Withdrawal to Godwoken v1","description":"This tutorial shows how to deposit and withdraw funds from old Godwoken - version 0 - to the new network - version 1. If you don\'t have any funds on old network you should skip this article.","sidebar":"sidebar2"},"frameworks":{"id":"frameworks","title":"Frameworks","description":"Godwoken","sidebar":"sidebar2"},"getStart":{"id":"getStart","title":"Get Started with Godwoken","description":"Welcome to the Godwoken Docs site.","sidebar":"sidebar2"},"godwokenkicker":{"id":"godwokenkicker","title":"Godwoken-Kicker","description":"Godwoken-Kicker is a one-line command that launches a local Godwoken network on Devnet. Developers can deploy Ethereum contracts and migrate Ethereum DApps to this local network quickly.","sidebar":"sidebar2"},"gwchangelog/releaseNote1.1":{"id":"gwchangelog/releaseNote1.1","title":"Godwoken V1.1 Release Note","description":"This release note includes the new features and major updates in Godwoken v1.1."},"gwchangelog/releaseNote1.2":{"id":"gwchangelog/releaseNote1.2","title":"Godwoken V1.2 Release Note","description":"The following release notes cover the most recent and major changes in Godwoken v1.2. You can also see all release notes in the Godwoken Changlog."},"gwchangelog/releaseNote1.3":{"id":"gwchangelog/releaseNote1.3","title":"Godwoken V1.3 Release Note","description":"The following release notes cover the most recent and major changes in Godwoken v1.3. You can also see all release notes in the Godwoken Changlog."},"gwchangelog/releaseNote1.4":{"id":"gwchangelog/releaseNote1.4","title":"Godwoken V1.4 Release Note","description":"Currently, Godwoken is updated on a regular basis to provide new features and updates. The following release notes covers the most recent changes in Godwoken v1.4. You can check the full release notes in the Godwoken Changlog."},"gwchangelog/releaseNote1.5":{"id":"gwchangelog/releaseNote1.5","title":"Godwoken V1.5 Release Note","description":"Currently, Godwoken is updated on a regular basis to provide new features and updates. The following release notes covers the most recent changes in Godwoken v1.5. You can check the full release notes in the Godwoken Changlog."},"gwchangelog/releaseNote1.6":{"id":"gwchangelog/releaseNote1.6","title":"Godwoken V1.6 Release Note","description":"Godwoken is currently updated on a regular basis to provide new features and updates. The following release notes covers the most recent changes in Godwoken v1.6. You can check the full release notes in the Godwoken Changlog.","sidebar":"sidebar2"},"gwchangelog/v0difv1":{"id":"gwchangelog/v0difv1","title":"Differences Between v0 and v1","description":"Godwoken v1 is a release of the Godwoken source code and a standalone network. This release fixes many compatibility issues of the Godwoken v0 network. The following document explains the differences between the two versions.","sidebar":"sidebar2"},"gwScripts":{"id":"gwScripts","title":"Scripts","description":"Godwoken scripts are written in Rust and C. Rust scripts run on the CKB to constrain the Rollup behavior, and C scripts run on Godwoken\'s nodes to provide layer-2 built-in contracts and programming interfaces.","sidebar":"sidebar2"},"gwtxLife":{"id":"gwtxLife","title":"Godwoken Transaction","description":"Godwoken is a layer 2 rollup framework for Nervos CKB. It provides scalability and an account-based programming model to CKB. For an overview of Godwoken see this post. This article dives into the innards of Godwoken, explains how it works, and how each individual piece fits together.","sidebar":"sidebar2"},"infrastructure":{"id":"infrastructure","title":"Infrastructure","description":"Force Bridge","sidebar":"sidebar2"},"integration":{"id":"integration","title":"Integration Guide for Ethereum Developers","description":"This documentation can be used as an integration guide for wallets and exchanges or as a reference for developing dApps on Godwoken. It explains the rationale for developing decentralized applications using Godwoken, the known caveats of version 1 and corresponding workarounds, as well as providing hands-on training on integrating Ethereum dApps with CKB through Godwoken.","sidebar":"sidebar2"},"layer2Account":{"id":"layer2Account","title":"Layer 2 Account in Godwoken","description":"Godwoken v1 introduced the registry and registry address, which can be seen as alias mechanisms for layer 2 accounts."},"oracles":{"id":"oracles","title":"Oracles","description":"Band","sidebar":"sidebar2"},"otherTools":{"id":"otherTools","title":"Other Tools","description":"Wallets","sidebar":"sidebar2"},"overview":{"id":"overview","title":"Godwoken Overview","description":"With the vision to enable interoperability across the blockchain ecosystem through a multi-chain solution, Godwoken is an impactful move towards this objective for Nervos Network.","sidebar":"sidebar2"},"pCKB":{"id":"pCKB","title":"pCKB","description":"pCKB is a defined layer 2 sUDT token type when deploying a Godwoken chain, it is the new concept that Godwoken v1 introduced.","sidebar":"sidebar2"},"quickStart":{"id":"quickStart","title":"Developer Quick Start","description":"Hello Godwoken","sidebar":"sidebar2"},"reference":{"id":"reference","title":"Reference and Useful Links","description":"This page covers the repositories and articles that are currently referenced in this site.","sidebar":"sidebar2"},"sendPCKB":{"id":"sendPCKB","title":"Transfer pCKB on Godwoken v1","description":"This section will show you how to deposit, withdraw and send pCKBs on Godwoken using Godwoken Bridge and MetaMask wallet.  Godwoken uses pCKB to collect transaction fees by default. Godwoken v1.6 starts to support the transfer of pCKB, the Godwoken native token, and no longer requires the user to transfer by sUDTERC20Proxy contract.","sidebar":"sidebar2"},"standards":{"id":"standards","title":"Standards","description":"SUDT","sidebar":"sidebar2"},"structure":{"id":"structure","title":"Structure","description":"Mainnet / Testnet / Devnet","sidebar":"sidebar2"},"tokens":{"id":"tokens","title":"Tokens","description":"On this page you can find tokens deployed on Godwoken.","sidebar":"sidebar2"},"tooling":{"id":"tooling","title":"Tooling","description":"CKB Node","sidebar":"sidebar2"},"wallets":{"id":"wallets","title":"Wallets","description":"MetaMask","sidebar":"sidebar2"},"web3changelog/web3Change1.5":{"id":"web3changelog/web3Change1.5","title":"Godwoken Web3 V1.5 Release Note","description":"Godwoken Web3 is a Ethereum-compatibility RPC layer on Godwoken. Godwoken Web3 is being continually updated. The following content covers the most recent changes in Godwoken Web3 v1.5. For the full release notes refer to Godwoken Web3 Releases."},"web3changelog/web3Change1.6":{"id":"web3changelog/web3Change1.6","title":"Godwoken Web3 V1.6 Release Note","description":"Godwoken Web3 is a Ethereum-compatibility RPC layer on Godwoken. Godwoken Web3 is being continually updated. The following content covers the most recent changes in Godwoken Web3 v1.6. For the full release notes refer to Godwoken Web3 Releases."},"web3changelog/web3Change1.7":{"id":"web3changelog/web3Change1.7","title":"Godwoken Web3 V1.7 Release Note","description":"Godwoken Web3 is a Ethereum-compatibility RPC layer on Godwoken. Godwoken Web3 is being continually updated. The following content covers the most recent changes in Godwoken Web3 v1.7. For the full release notes refer to Godwoken Web3 Releases.","sidebar":"sidebar2"}}}')}}]);