"use strict";(self.webpackChunkckb_sdk=self.webpackChunkckb_sdk||[]).push([[9526],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),d=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=d(t.components);return r.createElement(p.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),c=d(n),m=a,u=c["".concat(p,".").concat(m)]||c[m]||k[m]||o;return n?r.createElement(u,i(i({ref:e},s),{},{components:n})):r.createElement(u,i({ref:e},s))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1691:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));n(4996);const o={id:"connectionInfo",title:"Godwoken Public Networks"},i=void 0,l={unversionedId:"connectionInfo",id:"version-1.3-rc1(WIP)/connectionInfo",title:"Godwoken Public Networks",description:"",source:"@site/versioned_docs/version-1.3-rc1(WIP)/connectionInfo.md",sourceDirName:".",slug:"/connectionInfo",permalink:"/connectionInfo",draft:!1,tags:[],version:"1.3-rc1(WIP)",frontMatter:{id:"connectionInfo",title:"Godwoken Public Networks"},sidebar:"sidebar2",previous:{title:"Developer Quick Start",permalink:"/quickStart"},next:{title:"Frameworks",permalink:"/frameworks"}},p={},d=[{value:"Godwoken",id:"godwoken",level:2},{value:"Nervos Layer 1",id:"nervos-layer-1",level:2},{value:"Notes",id:"notes",level:2},{value:"GODWOKEN MAINNET V1",id:"godwoken-mainnet-v1",level:3},{value:"GODWOKEN TESTNET V1",id:"godwoken-testnet-v1",level:3},{value:"CKB Mainnet Mirana",id:"ckb-mainnet-mirana",level:3},{value:"<strong>CKB Testnet Pudge</strong>",id:"ckb-testnet-pudge",level:3},{value:"Run a CKB Mainnet Node and Testnet Node with Docker",id:"run-a-ckb-mainnet-node-and-testnet-node-with-docker",level:3}],s={toc:d};function k(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"godwoken"},"Godwoken"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"ITEM"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Godwoken Testnet"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Godwoken Mainnet"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NETWORK NAME"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Godwoken/PolyJuice Testnet"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Godwoken/PolyJuice Mainnet")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"RPC URL"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://godwoken-testnet-v1.ckbapp.dev"},"https://godwoken-testnet-v1.ckbapp.dev"),","),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://v1.mainnet.godwoken.io/rpc"},"https://v1.mainnet.godwoken.io/rpc"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Chain ID"),(0,a.kt)("td",{parentName:"tr",align:"left"},"71401"),(0,a.kt)("td",{parentName:"tr",align:"left"},"71402")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Currency Symbol"),(0,a.kt)("td",{parentName:"tr",align:"left"},"CKB"),(0,a.kt)("td",{parentName:"tr",align:"left"},"CKB")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://v1.testnet.gwscan.com/"},"https://v1.testnet.gwscan.com/")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://v1.gwscan.com/"},"https://v1.gwscan.com/"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://gw-explorer.nervosdao.community"},"https://gw-explorer.nervosdao.community")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://gw-mainnet-explorer.nervosdao.community"},"https://gw-mainnet-explorer.nervosdao.community"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Token Bridge"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://testnet.bridge.godwoken.io"},"https://testnet.bridge.godwoken.io")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://bridge.godwoken.io"},"https://bridge.godwoken.io"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"WebSocket"),(0,a.kt)("td",{parentName:"tr",align:"left"},"wss://godwoken-testnet-v1.ckbapp.dev/ws"),(0,a.kt)("td",{parentName:"tr",align:"left"},"wss://v1.mainnet.godwoken.io/ws")))),(0,a.kt)("h2",{id:"nervos-layer-1"},"Nervos Layer 1"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"ITEM"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Testnet Pudge"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Mainnet Mirana"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://pudge.explorer.nervos.org/"},"https://pudge.explorer.nervos.org/")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://explorer.nervos.org"},"https://explorer.nervos.org"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Faucet"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"https://faucet.nervos.org/"},"https://faucet.nervos.org/")),(0,a.kt)("td",{parentName:"tr",align:"left"})))),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("h3",{id:"godwoken-mainnet-v1"},"GODWOKEN MAINNET V1"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"ETH Address Registry ID"),": 2"),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"ETH Address Registry")," layer2 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-scripts/blob/master/c/contracts/eth_addr_reg.c"},"contract")," introduces two-ways mappings between ",(0,a.kt)("inlineCode",{parentName:"p"},"eth_address")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"gw_script_hash"),"."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-info/blob/mainnet_v1/mainnet_v1/bridged-token-list.json"},"sUDT_ERC20_Proxy contracts")))),(0,a.kt)("h3",{id:"godwoken-testnet-v1"},"GODWOKEN TESTNET V1"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"ETH Address Registry ID:")," 2"),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"ETH Address Registry")," layer2 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-scripts/blob/master/c/contracts/eth_addr_reg.c"},"contract")," introduces two-ways mappings between ",(0,a.kt)("inlineCode",{parentName:"p"},"eth_address")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"gw_script_hash"),"."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"L2 Godwoken Testnet pCKB Contract")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Address: 0xE05d380839f32bC12Fb690aa6FE26B00Bd982613"),(0,a.kt)("li",{parentName:"ul"},"Symbol: pCKB"),(0,a.kt)("li",{parentName:"ul"},"Decimals: 18")))),(0,a.kt)("h3",{id:"ckb-mainnet-mirana"},"CKB Mainnet Mirana"),(0,a.kt)("p",null,"Use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases/latest"},"latest release")," and run ",(0,a.kt)("inlineCode",{parentName:"p"},"ckb init --chain mainnet")," to initialize the node."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Mirana is active since the epoch 5414, see the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/jordanmack/nervos-ckb2021-hard-fork-migration-guide"},"migration guide")," to upgrade from Lina.")),(0,a.kt)("h3",{id:"ckb-testnet-pudge"},(0,a.kt)("strong",{parentName:"h3"},"CKB Testnet Pudge")),(0,a.kt)("h3",{id:"run-a-ckb-mainnet-node-and-testnet-node-with-docker"},"Run a CKB Mainnet Node and Testnet Node with Docker"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.nervos.org/docs/basics/guides/run-ckb-with-docker"},"https://docs.nervos.org/docs/basics/guides/run-ckb-with-docker"))))}k.isMDXComponent=!0}}]);