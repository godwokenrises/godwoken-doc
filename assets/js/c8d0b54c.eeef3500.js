"use strict";(self.webpackChunkckb_sdk=self.webpackChunkckb_sdk||[]).push([[5017],{3905:(t,e,n)=>{n.d(e,{Zo:()=>k,kt:()=>u});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i=a.createContext({}),d=function(t){var e=a.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},k=function(t){var e=d(t.components);return a.createElement(i.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,i=t.parentName,k=p(t,["components","mdxType","originalType","parentName"]),s=d(n),u=r,c=s["".concat(i,".").concat(u)]||s[u]||m[u]||o;return n?a.createElement(c,l(l({ref:e},k),{},{components:n})):a.createElement(c,l({ref:e},k))}));function u(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,l=new Array(o);l[0]=s;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=t,p.mdxType="string"==typeof t?t:r,l[1]=p;for(var d=2;d<o;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7763:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var a=n(3117),r=(n(7294),n(3905));n(4996);const o={id:"connectionInfo",title:"Godwoken Public Networks"},l=void 0,p={unversionedId:"connectionInfo",id:"version-1.6/connectionInfo",title:"Godwoken Public Networks",description:"Godwoken Mainnet v1",source:"@site/versioned_docs/version-1.6/connectionInfo.md",sourceDirName:".",slug:"/connectionInfo",permalink:"/1.6/connectionInfo",draft:!1,tags:[],version:"1.6",frontMatter:{id:"connectionInfo",title:"Godwoken Public Networks"},sidebar:"sidebar2",previous:{title:"Godwoken Overview",permalink:"/1.6/overview"},next:{title:"Frameworks",permalink:"/1.6/frameworks"}},i={},d=[{value:"Godwoken Mainnet v1",id:"godwoken-mainnet-v1",level:2},{value:"Godwoken Testnet v1",id:"godwoken-testnet-v1",level:2},{value:"Godwoken Mainnet v0",id:"godwoken-mainnet-v0",level:2},{value:"Nervos Layer-1",id:"nervos-layer-1",level:2},{value:"CKB Mainnet Mirana",id:"ckb-mainnet-mirana",level:2},{value:"<strong>CKB Testnet Pudge</strong>",id:"ckb-testnet-pudge",level:2},{value:"Run a CKB Mainnet Node and Testnet Node with Docker",id:"run-a-ckb-mainnet-node-and-testnet-node-with-docker",level:2}],k={toc:d};function m(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"godwoken-mainnet-v1"},"Godwoken Mainnet v1"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ITEM"),(0,r.kt)("th",{parentName:"tr",align:null},"Detail"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Network Name"),(0,r.kt)("td",{parentName:"tr",align:null},"Godwoken/PolyJuice Mainnet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RPC URL"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://v1.mainnet.godwoken.io/rpc"},"https://v1.mainnet.godwoken.io/rpc"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Chain ID"),(0,r.kt)("td",{parentName:"tr",align:null},"71402")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Currency Symbol"),(0,r.kt)("td",{parentName:"tr",align:null},"pCKB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gwscan.com/"},"https://gwscan.com/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://v1.gwscan.com/"},"https://v1.gwscan.com/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gw-mainnet-explorer.nervosdao.community"},"https://gw-mainnet-explorer.nervosdao.community"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Token Bridge"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://bridge.godwoken.io"},"https://bridge.godwoken.io"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"WebSocket"),(0,r.kt)("td",{parentName:"tr",align:null},"wss://v1.mainnet.godwoken.io/ws")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"ETH Address Registry ID"),": 2"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"ETH Address Registry")," layer-2 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-scripts/blob/master/c/contracts/eth_addr_reg.c"},"contract")," introduces two-ways mappings between ",(0,r.kt)("inlineCode",{parentName:"p"},"eth_address")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"gw_script_hash"),"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-info/blob/main/mainnet_v1/bridged-token-list.json"},"sUDT_ERC20_Proxy contracts"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Layer-2 Godwoken Mainnet pCKB Contract")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Address: 0x7538C85caE4E4673253fFd2568c1F1b48A71558a"),(0,r.kt)("li",{parentName:"ul"},"Symbol: pCKB"),(0,r.kt)("li",{parentName:"ul"},"Decimals: 18")))),(0,r.kt)("h2",{id:"godwoken-testnet-v1"},"Godwoken Testnet v1"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ITEM"),(0,r.kt)("th",{parentName:"tr",align:null},"Detail"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Network Name"),(0,r.kt)("td",{parentName:"tr",align:null},"Godwoken/PolyJuice Testnet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RPC URL"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://godwoken-testnet-v1.ckbapp.dev"},"https://godwoken-testnet-v1.ckbapp.dev"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Chain ID"),(0,r.kt)("td",{parentName:"tr",align:null},"71401")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Currency Symbol"),(0,r.kt)("td",{parentName:"tr",align:null},"pCKB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://v1.testnet.gwscan.com/"},"https://v1.testnet.gwscan.com/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gw-testnet-explorer.nervosdao.community"},"https://gw-testnet-explorer.nervosdao.community"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Token Bridge"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://testnet.bridge.godwoken.io"},"https://testnet.bridge.godwoken.io"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"WebSocket"),(0,r.kt)("td",{parentName:"tr",align:null},"wss://godwoken-testnet-v1.ckbapp.dev/ws")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Graph (subgraph)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gw-testnet-graph.nervosdao.community"},"https://gw-testnet-graph.nervosdao.community"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Graph RPC"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gw-testnet-graph.nervosdao.community/rpc/"},"https://gw-testnet-graph.nervosdao.community/rpc/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Graph IPFS"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gw-testnet-graph.nervosdao.community/ipfs/"},"https://gw-testnet-graph.nervosdao.community/ipfs/"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"ETH Address Registry ID:")," 2"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"ETH Address Registry")," layer-2 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/godwoken-scripts/blob/master/c/contracts/eth_addr_reg.c"},"contract")," introduces two-ways mappings between ",(0,r.kt)("inlineCode",{parentName:"p"},"eth_address")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"gw_script_hash"),"."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Layer-2 Godwoken Testnet pCKB Contract")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Address: 0xE05d380839f32bC12Fb690aa6FE26B00Bd982613"),(0,r.kt)("li",{parentName:"ul"},"Symbol: pCKB"),(0,r.kt)("li",{parentName:"ul"},"Decimals: 18")))),(0,r.kt)("h2",{id:"godwoken-mainnet-v0"},"Godwoken Mainnet v0"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ITEM"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Detail"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NETWORK NAME"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Godwoken/PolyJuice Mainnet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RPC URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://mainnet.godwoken.io/rpc"},"https://mainnet.godwoken.io/rpc"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Chain ID"),(0,r.kt)("td",{parentName:"tr",align:"left"},"71394")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Currency Symbol"),(0,r.kt)("td",{parentName:"tr",align:"left"},"pCKB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://v0.gwscan.com/"},"https://v0.gwscan.com/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Token Bridge"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://bridge.godwoken.io"},"https://bridge.godwoken.io"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"WebSocket"),(0,r.kt)("td",{parentName:"tr",align:"left"},"wss://mainnet.godwoken.io/ws")))),(0,r.kt)("h2",{id:"nervos-layer-1"},"Nervos Layer-1"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ITEM"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Testnet Pudge"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Mainnet Mirana"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Block Explorer"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://pudge.explorer.nervos.org/"},"https://pudge.explorer.nervos.org/")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://explorer.nervos.org"},"https://explorer.nervos.org"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Faucet"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://faucet.nervos.org/"},"https://faucet.nervos.org/")),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("h2",{id:"ckb-mainnet-mirana"},"CKB Mainnet Mirana"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nervosnetwork/ckb/releases/latest"},"latest release")," and run ",(0,r.kt)("inlineCode",{parentName:"p"},"ckb init --chain mainnet")," to initialize the node."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Mirana is active since the epoch 5414, see the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/jordanmack/nervos-ckb2021-hard-fork-migration-guide"},"migration guide")," to upgrade from Lina.")),(0,r.kt)("h2",{id:"ckb-testnet-pudge"},(0,r.kt)("strong",{parentName:"h2"},"CKB Testnet Pudge")),(0,r.kt)("p",null,"After adding the \u201cGodwoken Testnet v1\u201d to your wallet and copied your layer-1 Wallet Address which is connected to Metamask layer-1 address. We want to get some free CKB. Make sure your wallet is set to the \u201cGodwoken Testnet v1\u201d."),(0,r.kt)("p",null,"To deploy to Nervos layer-1 Testnet we need some free CKB on the L1 to use. Testnets require money just like our mainnets require real money but testnets use fake money that we can collect through a faucet."),(0,r.kt)("p",null,"There are many testnets available in this case the one we are using is the L1 Testnet faucet link below."),(0,r.kt)("p",null,"Paste your layer-1 address which should start with ",(0,r.kt)("inlineCode",{parentName:"p"},"ckt")," and click claim."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," this might take a min to process."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Explorer:")," ",(0,r.kt)("a",{parentName:"li",href:"https://pudge.explorer.nervos.org/"},"https://pudge.explorer.nervos.org/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Faucet:")," ",(0,r.kt)("a",{parentName:"li",href:"https://faucet.nervos.org/"},"https://faucet.nervos.org/"))),(0,r.kt)("h2",{id:"run-a-ckb-mainnet-node-and-testnet-node-with-docker"},"Run a CKB Mainnet Node and Testnet Node with Docker"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.nervos.org/docs/basics/guides/run-ckb-with-docker"},"https://docs.nervos.org/docs/basics/guides/run-ckb-with-docker"))))}m.isMDXComponent=!0}}]);